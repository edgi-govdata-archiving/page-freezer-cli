version: 2
jobs:
  build:
    docker:
      - image: circleci/node:12.13.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-2-{{ checksum "package-lock.json" }}
            - dependency-cache-2-
      - run:
          name: Dependencies
          command: npm ci
      - save_cache:
          key: dependency-cache-2-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build
          command: npm run build-production
      - run:
          name: Run linter
          command: npm run lint
      - run:
          name: Test
          command: npm test

  publish_docker:
    machine: true
    steps:
      - checkout
      - run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: |
          docker build -t envirodgi/ui:$CIRCLE_SHA1 .
          docker build -t envirodgi/ui:latest .
      - run: |
          docker push envirodgi/ui:$CIRCLE_SHA1
          docker push envirodgi/ui:latest

  compare_bundle_size:
    docker:
      - image: circleci/node:12.13.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-2-{{ checksum "package-lock.json" }}
            - dependency-cache-2-
      - run:
          name: Dependencies
          command: npm ci
      - save_cache:
          key: dependency-cache-2-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build Branch
          command: |
            npm run build-production
            stat -f '%z' dist/bundle.js > stats-raw-size.txt
            stat -f '%z' dist/bundle.js.gz > stats-compressed-size.txt
      - run:
          name: Build Master
          command: |
            git checkout master
            npm run build-production
            stat -f '%z' dist/bundle.js > stats-master-raw-size.txt
            stat -f '%z' dist/bundle.js.gz > stats-master-compressed-size.txt
      - run:
          name: Compare Build Sizes
          command: |
            MASTER_RAW_SIZE="$(cat stats-master-raw-size.txt)"
            MASTER_COMPRESSED_SIZE="$(cat stats-master-compressed-size.txt)"
            RAW_SIZE="$(cat stats-raw-size.txt)"
            COMPRESSED_SIZE="$(cat stats-compressed-size.txt)"

            # Calculate % change
            CHANGE="$(echo "scale=1; 100 * (${RAW_SIZE} - ${MASTER_RAW_SIZE}) / ${MASTER_RAW_SIZE}" | bc)"
            CHANGE_COMPRESSED="$(echo "scale=1; 100 * (${COMPRESSED_SIZE} - ${MASTER_COMPRESSED_SIZE}) / ${MASTER_COMPRESSED_SIZE}" | bc)"

            # Ensure there's always a sign.
            SIGNED_CHANGE="${CHANGE}"
            if [[ $CHANGE != -* ]]; then
              SIGNED_CHANGE="+${CHANGE}"
            fi
            SIGNED_CHANGE_COMPRESSED="${CHANGE_COMPRESSED}"
            if [[ $CHANGE_COMPRESSED != -* ]]; then
              SIGNED_CHANGE_COMPRESSED="+${CHANGE_COMPRESSED}"
            fi

            echo "Current Release Size:"
            echo "  Bundle: ${MASTER_RAW_SIZE}"
            echo "  Compressed: ${MASTER_COMPRESSED_SIZE}"
            echo "This Branch Size:"
            echo "  Bundle: ${RAW_SIZE} (${SIGNED_CHANGE})"
            echo "  Compressed: ${COMPRESSED_SIZE} (${SIGNED_CHANGE_COMPRESSED})"

            # If we increased in size by a lot, fail the test.
            if [[ $CHANGE > 20 || $CHANGE_COMPRESSED > 20 ]]; then
              exit 1
            fi

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore: release
      - compare_bundle_size:
          filters:
            branches:
              ignore:
                - master
                - release

  build-and-publish:
    jobs:
      - build:
          filters:
            branches:
              only:
                - release
      - publish_docker:
          requires:
            - build
